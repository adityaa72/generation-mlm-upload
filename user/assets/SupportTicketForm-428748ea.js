import{as as D,aS as M,y as H,z as d,D as R,N as z,cj as B,j as e,H as Q,a as r,S as U,J as f,B as p,T as h,cw as V,K,cx as L,q as x,A as N}from"./index-a3673b34.js";import{r as E}from"./warn-once-32b7c465.js";const G=({isReply:i,ticketId:l})=>{const b=D(),c=M(),g=H().shape({message:d().required("Message is required"),subject:i?void 0:d().required("Subject is required")}),v={ticketId:l,isReply:i,subject:"",message:"",files:[]},u=R({resolver:z(g),defaultValues:v}),{watch:y,getValues:F,setValue:s,handleSubmit:S,formState:{isSubmitting:j}}=u,T=async t=>{try{await L(t),c.invalidateQueries([x.FetchSupportTicketsList]),i&&c.invalidateQueries([x.FetchTicket,l]),b(N.support.root)}catch(a){console.log("ðŸš€ ~ file: TicketForm.jsx:54 ~ onSubmit ~ error",a)}},w=y(),{isSuccess:J,uploadFile:q,progress:m}=B(),k=E.useCallback(async t=>{for(const a of t){const o=F("files");s("files",[...o,{name:Math.random(),progress:m,upload:!1}]);const n=new FormData;n.append("file",a);const{fileUrl:P}=await q(n);s("files",[...o,P])}},[s,m]),A=()=>{s("files",[])},C=t=>{var o;const a=(o=w.files)==null?void 0:o.filter(n=>n!==t);s("files",a)};return e(Q,{methods:u,onSubmit:S(T),children:r(U,{justifyContent:"flex-end",spacing:3,children:[!i&&e(f,{name:"subject",type:"text",label:"Subject"}),e(f,{multiline:!0,minRows:4,name:"message",type:"text",label:"Message "}),r(p,{children:[r(h,{component:"div",variant:"body2",sx:{mb:2},children:["Add Files",e(h,{component:"span",color:"text.secondary",variant:"body2",children:"(Maximum 5 Files)"})]}),e(V,{name:"files",showPreview:!0,accept:"image/*",maxFiles:5,maxSize:3145728,onDrop:k,onRemove:C,onRemoveAll:A})]}),e(p,{sx:{display:"flex",justifyContent:"flex-end",gap:2},children:e(K,{size:"large",type:"submit",variant:"contained",loading:j,children:"Submit"})})]})})};export{G as T};
